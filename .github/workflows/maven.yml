
# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
# Currently this file does a full package and then attempts to run all itets
name: Java CI with Maven

on:
  push:
    branches: [ actions2 ]
  pull_request:
    branches: [ actions2 ]
    types: [ opened ]
  issue_comment:
   types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/cache@v2
      with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-
    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - uses: actions/checkout@v2
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2.0.2
      env:
        SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
        SLACK_COLOR: '#3278BD'
        SLACK_ICON: https://avatars0.githubusercontent.com/u/6706726?s=200&v=4
        SLACK_MESSAGE: 'Successfully built ddf-registry'
        SLACK_TITLE: Message
        SLACK_USERNAME: ${{ secrets.SLACK_USERNAME }}
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  itest:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/cache@v2
      with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys:  |
            ${{ runner.os }}-m2-
    - uses: actions/checkout@v2
    - name: Run itests
      run: mvn -B verify --file test/itests/test-itests-registry/pom.xml
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2.0.2
      env:
        SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
        SLACK_COLOR: '#3278BD'
        SLACK_ICON: https://avatars0.githubusercontent.com/u/6706726?s=200&v=4
        SLACK_MESSAGE: 'Successfully passed ddf-registry itests'
        SLACK_TITLE: Message
        SLACK_USERNAME: ${{ secrets.SLACK_USERNAME }}
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  pr-build-check:
    runs-on: ubuntu-latest
    steps:
      - name: check pull request for trigger 
        uses: khan/pull-request-comment-trigger@master
        id: check
        with:
          trigger: 'build now'
          reaction: eyes
        env:
          GITHUB_TOKEN: '${{ secrets.ACTION_TOKEN }}'
        if: steps.check.outputs.triggered == 'true'
  pr-build:
     runs-on: ubuntu-latest
     needs: pr-build-check
     if: needs.pr-build-check.outputs.triggered == 'true'
     steps: 
       - uses: actions/cache@v2
         with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys:  |
            ${{ runner.os }}-m2-
       - name: Run itests
         #Run the PR build without any pax-exam tests (Temporary)
         run: mvn clean install -B -DskipITs --file pom.xml
